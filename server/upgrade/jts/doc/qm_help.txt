

Upgrade an already installed QM

Notes:
      - This script upgrades QM. For more information, see the help topic, "Upgrading the Rational solution for CLM".
      - Except while displaying this help, this script must be run from the JazzInstallRoot/server directory.

Usage:
    qm_upgrade
         -oldApplicationHome <value> --Full path to the QM home directory of the old installation.  For a typical installation, this path is <QM installation>/server/conf.         
         [-applicationContextRoot jazz] --QM context root.
         [-oldApplicationVersion <none>] --The version that is being upgraded.  By default, this is determined by running repotools -version against the old QM application.
         [-updateTomcatFiles <yes (default) | no>] --Whether to update the tomcat configuration files.
         [-oldTomcatHome <none>] --Full path to the Tomcat root directory of the old installation. By default, the oldTomcatHome parameter value is derived from the oldApplicationHome parameter value.
         [-newApplicationHome conf] --Path to the QM server configuration directory of the new installation.
         [-newJTSHome <none>] --Path to the JTS server configuration directory of the JTS that the new installation will use. By default, the newJTSHome parameter value is derived from the newApplicationHome parameter value.
         [-jtsContextRoot jts] --JTS Context root.
         [-newApplicationTomcatHome <none>] --Path to the QM Tomcat home directory of the new installation. By default, the newApplicationTomcatHome parameter value is derived from the newApplicationHome parameter value.
         [-newJTSTomcatHome <none>] --Path to the JTS Tomcat home directory of the JTS that the new installation will use. By default, the newJTSTomcatHome parameter value is derived from the newJTSHome parameter value.
         [-ignoreJTSVersionCheck] --Do not attempt to verify that the application version is compatible with the JTS version located at newJTSHome.  This argument should only be used in a distributed deployment where the JTS is on a separate system that is inaccessible from the application system.
         [-noPrompt] --Do not prompt before creating or modifying the tables.
         [-noEditor] --Do not open an editor on the teamserver.properties files.
         [-noVerify] --Do not perform teamserver.properties files verification.
         [-noStepPrompt] --Do not prompt before executing a step.

Examples:
    upgrade/qm/qm_upgrade.sh -oldApplicationHome /opt/JazzTeamServer3.0.x/jazz/server/conf -importFromFile /tmp/qmData.tar

